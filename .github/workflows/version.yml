name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache apt packages and lists
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives/*.deb
            /var/cache/apt/archives/partial/*.deb
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-packages-${{ hashFiles('.github/workflows/version.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-packages-

      - name: Cache build objects
        uses: actions/cache@v4
        with:
          path: |
            obj
            bin
          key: ${{ runner.os }}-build-${{ hashFiles('src/**', 'include/**', 'Makefile') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install build dependencies
        run: |
          if [ ! -f /var/lib/apt/lists/lock ]; then
            sudo apt-get update
          fi
          sudo apt-get install -y --no-install-recommends gcc make

      - name: Setup SDL2
        uses: libsdl-org/setup-sdl@main
        with:
          install-linux-dependencies: true
          version: 2-latest
          version-sdl-image: 2-latest

      - name: Build Linux binary
        run: |
          ./scripts/mkall_linux.sh
          mkdir -p dist
          cp bin/card_game dist/card_game-linux-amd64
          make clean
          chmod +x ./scripts/mkallS_linux.sh
          ./scripts/mkallS_linux.sh
          cp bin/card_game dist/card_game-linux-sdl2-amd64

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: card_game-linux-amd64
          path: dist/card_game-linux-amd64

      - name: Upload Linux binary with SDL2
        uses: actions/upload-artifact@v4
        with:
          name: card_game-linux-sdl2-amd64
          path: dist/card_game-linux-sdl2-amd64

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache MSYS2 packages
        uses: actions/cache@v4
        with:
          path: |
            D:\msys64\var\cache\pacman\pkg
            D:\msys64\mingw64
          key: ${{ runner.os }}-msys2-${{ hashFiles('.github/workflows/version.yml') }}
          restore-keys: |
            ${{ runner.os }}-msys2-

      - name: Setup MSYS2 with caching
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: false
          cache: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_image
            mingw-w64-x86_64-SDL2_ttf
            make

      - name: Build Windows binaries
        shell: msys2 {0}
        run: |
          ./scripts/mkall_win32.sh
          mkdir -p dist
          cp bin/card_game.exe dist/card_game-windows-amd64.exe
          make clean
          ./scripts/mkallS_win32.sh
          cp bin/card_game.exe dist/card_game-windows-sdl2-amd64.exe

      - name: Upload Windows binary with SDL2
        uses: actions/upload-artifact@v4
        with:
          name: card_game-windows-sdl2-amd64
          path: dist/card_game-windows-sdl2-amd64.exe

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: card_game-windows-amd64
          path: dist/card_game-windows-amd64.exe

  semantic-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Cache semantic-release packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-semantic-${{ hashFiles('.github/workflows/version.yml') }}
          restore-keys: |
            ${{ runner.os }}-npm-semantic-
            ${{ runner.os }}-npm-

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g conventional-changelog-conventionalcommits

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: card_game-linux-amd64
          path: dist/

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: card_game-windows-amd64
          path: dist/

      - name: Download Windows binary with SDL2
        uses: actions/download-artifact@v4
        with:
          name: card_game-windows-sdl2-amd64
          path: dist/

      - name: Download Linux binary with SDL2
        uses: actions/download-artifact@v4
        with:
          name: card_game-linux-sdl2-amd64
          path: dist/

      - name: Run semantic release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
