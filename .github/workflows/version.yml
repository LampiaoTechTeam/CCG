name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make

      - name: Build Linux binary
        run: |
          ./scripts/mkall_linux.sh
          mkdir -p dist
          cp bin/card_game dist/card_game-linux-amd64

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: card_game-linux-amd64
          path: dist/card_game-linux-amd64

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup Make and LLVM
        run: |
          choco install llvm --version 17.0.6
          choco install make

      - name: Install SDL2 dependencies
        run: |
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg.exe install sdl2:x64-windows sdl2-image:x64-windows sdl2-ttf:x64-windows
          echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $env:GITHUB_ENV

      - name: Build Windows binaries
        run: |
          ./scripts/mkall_win32.sh
          mkdir -p dist
          mv bin/card_game.exe dist/card_game-windows-amd64.exe
          ./scripts/mkallS_win32.sh
          mv bin/card_game.exe dist/card_game-windows-sdl-amd64.exe

      - name: Upload Windows binary with SDL
        uses: actions/upload-artifact@v4
        with:
          name: card_game-windows-sdl-amd64
          path: dist/card_game-windows-sdl-amd64.exe

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: card_game-windows-amd64
          path: dist/card_game-windows-amd64.exe

  semantic-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g conventional-changelog-conventionalcommits

      - name: Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: card_game-linux-amd64
          path: dist/

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: card_game-windows-amd64
          path: dist/

      - name: Download Windows binary with SDL
        uses: actions/download-artifact@v4
        with:
          name: card_game-windows-sdl-amd64
          path: dist/

      - name: Run semantic release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release
